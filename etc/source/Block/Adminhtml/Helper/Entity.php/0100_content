    /**
     * Get no display
     *
     * @return bool
     */
    public function getNoDisplay()
    {
        $isNotAllowed = !$this->{{_}}authorization->isAllowed('{{Namespace}}_{{Module}}::entity_{{entity}}');
        return $this->getData('no_display') || $isNotAllowed;
    }

    /**
     * Get values for select
     *
     * @return array
     */
    public function getValues()
    {
        $collection = $this->{{_}}get{{Entities}}Collection();
        $values = $this->getValue();
        if (!is_array($values)) {
            $values = explode(',', $values);
        }
        $collection->addIdFilter($values);
        $options = [];
        foreach ($collection as ${{entity}}) {
            /** @var \{{Namespace}}\{{Module}}\Model\{{Entity}} ${{entity}} */
            $options[] = ['label' => ${{entity}}->get{{NameAttributeCode}}(), 'value' => ${{entity}}->getId()];
        }
        return $options;
    }

    /**
     * Get {{EntityLabel}} collection
     *
     * @return \{{Namespace}}\{{Module}}\Model\ResourceModel\{{Entity}}\Collection
     */
    protected function {{_}}get{{Entities}}Collection()
    {
        return $this->{{_}}collectionFactory->create();
    }

    /**
     * Attach {{EntityLabel}} suggest widget initialization
     *
     * @return string
     */
    public function getAfterElementHtml()
    {
        $htmlId = $this->getHtmlId();
        $suggestPlaceholder = __('start typing to search {{EntityLabel}}');
        $selectorOptions = $this->{{_}}jsonEncoder->encode($this->{{_}}getSelectorOptions());
        $new{{Entity}}Caption = __('New {{EntityLabel}}');
        /** @var \Magento\Backend\Block\Widget\Button $button */
        $button = $this->{{_}}layout->createBlock('Magento\Backend\Block\Widget\Button')
            ->setData([
                'id' => 'add_{{entity}}_button',
                'label' => $new{{Entity}}Caption,
                'title' => $new{{Entity}}Caption,
                'onclick' => 'jQuery("#new-{{entity}}").trigger("openModal")',
                'disabled' => $this->getDisabled()
            ]);
        //TODO: move this somewhere else when magento team decides to move it.
        $return = <<<HTML
        <input id="{$htmlId}-suggest" placeholder="$suggestPlaceholder" />
        <script type="text/javascript">
            require(["jquery","mage/mage"],function($) {  // waiting for dependencies at first
                $(function(){ // waiting for page to load to have '#{{entity}}_ids-template' available
                    $('#{$htmlId}-suggest').mage('treeSuggest', {$selectorOptions});
                });
            });
        </script>
HTML;
        return $return . $button->toHtml();
    }

    /**
     * Get selector options
     *
     * @return array
     */
    protected function {{_}}getSelectorOptions()
    {
        return array(
            'source' => $this->{{_}}backendData->getUrl('{{namespace}}_{{module}}/{{entity}}/suggest{{Entities}}'),
            'valueField' => '#' . $this->getHtmlId(),
            'className' => '{{entity}}-select',
            'multiselect' => true,
            'showAll' => true
        );
    }
